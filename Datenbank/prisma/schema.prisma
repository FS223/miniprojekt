// Datenbankanbindung
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Client-Generator
generator client {
  provider = "prisma-client-js"
}

// Anschriftmodell
model anschrift {
  id         Int      @id @unique @default(autoincrement())
  land       String
  plz        String
  ort        String
  strasse    String
  hausnummer String
  zusatz     String
  person     person[]

  @@unique([land, plz, ort, strasse, hausnummer, zusatz])
}

// Accountmodell
model account {
  id           Int    @id @unique @default(autoincrement())
  benutzername String @unique
  email        String @unique
  passwort     String
  rolle        rolle  @default(KUNDE)
  person       person @relation(fields: [personId], references: [id])
  personId     Int    @unique
}

// Personmodell
model person {
  id           Int          @id @unique @default(autoincrement())
  vorname      String
  nachname     String
  geburtsdatum DateTime     @db.Date
  geschlecht   geschlecht   @default(DIVERS)
  anschrift    anschrift    @relation(fields: [anschriftId], references: [id])
  anschriftId  Int
  account      account?
  kunde        kunde?
  mitarbeiter  mitarbeiter?

  @@unique([vorname, nachname, geburtsdatum, geschlecht, anschriftId])
}

// Kunde
model kunde {
  id             Int             @id @unique @default(autoincrement())
  person         person?         @relation(fields: [personId], references: [id])
  personId       Int?            @unique
  iban           String?         @unique @db.VarChar(38)
  bild           String?
  mitgliedschaft mitgliedschaft?
  kurse          kurs[]
  zeitenBuchung  zeitenBuchung[]
}

// Mitarbeiter
model mitarbeiter {
  id       Int     @id @unique @default(autoincrement())
  person   person? @relation(fields: [personId], references: [id])
  personId Int?    @unique
  kurse    kurs[]
}

// Kursverwaltung
model kurs {
  id            Int         @id @unique @default(autoincrement())
  bezeichnung   String
  beschreibung  String?
  teilnehmer    kunde[]
  kursLeiter    mitarbeiter @relation(fields: [kursLeiterId], references: [id])
  kursLeiterId  Int
  minTeilnehmer Int         @default(0)
  maxTeilnehmer Int         @default(16)
  preis         Decimal     @default(0.00)
  dauer         Int         @default(45)
  termine       termin[]

  @@unique([bezeichnung, kursLeiterId, minTeilnehmer, maxTeilnehmer, preis, dauer])
}

// CheckIn / CheckOut
model zeitenBuchung {
  id       Int      @id @unique @default(autoincrement())
  checkIn  DateTime @default(now())
  checkOut DateTime @default(now())
  kunde    kunde?   @relation(fields: [kundenId], references: [id])
  kundenId Int?

  @@unique([checkIn, checkOut, kundenId])
}

// Terminmodell
model termin {
  id           Int      @id @unique @default(autoincrement())
  bezeichnung  String
  beschreibung String?
  startZeit    DateTime @default(now())
  dauer        Int      @default(45)
  kurs         kurs?    @relation(fields: [kursId], references: [id])
  kursId       Int?
}

// Geschlecht
enum geschlecht {
  MAENNLICH
  WEIBLICH
  DIVERS
}

// Rolle des Benutzers
enum rolle {
  ADMINISTRATOR
  PERSONAL
  KUNDE
}

enum mitgliedschaft {
  BRONZE
  SILBER
  GOLD
  PLATINUM
}
